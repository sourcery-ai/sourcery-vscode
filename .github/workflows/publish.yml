name: Publish VSIX

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  publish-vsix:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - run: yarn install --frozen-lockfile

    - name: Update binaries
      run: |
        # Delete existing binaries
        rm -rf sourcery_binaries/install/{linux,mac,win}/*

        # Get release asset json
        ASSETS=$( curl https://api.github.com/repos/sourcery-ai/sourcery/releases | jq -e '.[] | select(.tag_name == "v${{ github.event.inputs.version }}") | .assets' )
        echo $ASSETS | jq -r '.[] | select(.name == "sourcery-${{ github.event.inputs.version }}-linux.tar.gz") | .browser_download_url' 

        # Download linux binary
        curl -L -o linux.tar.gz $( echo $ASSETS | jq -r '.[] | select(.name == "sourcery-${{ github.event.inputs.version }}-linux.tar.gz") | .browser_download_url' )
        tar -xzf linux.tar.gz -C sourcery_binaries/install/linux
        rm linux.tar.gz

        # Download mac binary
        curl -L -o mac.tar.gz $( echo $ASSETS | jq -r '.[] | select(.name == "sourcery-${{ github.event.inputs.version }}-mac.tar.gz") | .browser_download_url' )
        tar -xf mac.tar.gz -C sourcery_binaries/install/mac
        rm mac.tar.gz

        # Download windows binary
        curl -L -o win.zip $( echo $ASSETS | jq -r '.[] | select(.name == "sourcery-${{ github.event.inputs.version }}-win.zip") | .browser_download_url' )
        unzip win.zip -d sourcery_binaries/install/win
        rm win.zip

    - name: Update package.json version number
      run: jq '.version = "${{ github.event.inputs.version }}"' package.json > TMP && mv TMP package.json

    - name: Commit to master, tag release, and push
      run: |
        git add package.json sourcery_binaries/install
        git status
        git config --global user.name sourcery-ai-bot
        git config --global user.email 60611498+sourcery-ai-bot@users.noreply.github.com
        git commit -m'Update sourcery_binaries to release v${{ github.event.inputs.version }}'
        git push origin master

    - name: Package and publish VSCode extension
      run: |
        yarn run vsce package
        # yarn run vsce publish -p ${{ secrets.VSCE_TOKEN }}
        # yarn run ovsx publish -p ${{ secrets.OPEN_VSX_TOKEN }}

    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        path: sourcery-${{ github.event.inputs.version }}.vsix

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.event.inputs.version }}
        name: Sourcery ${{ github.event.inputs.version }}
        body: v${{ github.event.inputs.version }}
        prerelease: false
        artifacts: sourcery-${{ github.event.inputs.version }}.vsix
        artifactContentType: raw
        artifactErrorsFailBuild: true
        token: ${{ secrets.GITHUB_TOKEN }}
